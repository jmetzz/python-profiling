[tool.poetry]
authors = ["Jean Metz"]
description = "Profiling python code examples"
license = "MIT"
name = "python-profiling"
readme = "README.md"
version = "0.0.1"

[tool.poetry.dependencies]
click = "7.1.2"
environs = "9.3.0"
fastapi = "0.62.0"
ipykernel = {version = "5.4.2", optional = true}
jupyterlab = {version = "3.0.1", optional = true}
line-profiler = {version = "3.1.0", optional = true}
matplotlib = "3.3.3"
memory-profiler = {version = "0.58.0", optional = true}
numba = "0.52.0"
numpy = "1.19.5"
pandas = "1.2.0"
pandas-profiling = {version = "2.9.0", optional = true}
pillow = "8.1.0"
pip = "20.3.3"
psutil = {version = "5.8.0", optional = true}
psycopg2-binary = "2.8.6"
py-heat-magic = {version = "0.0.2", optional = true}
pydantic = "1.7.3"
pyinstrument = {version = "3.3.0", optional = true}
python = "3.9.1"
requests = "2.31.0"
snakeviz = {version = "2.1.0", optional = true}
tabulate = "0.8.7"
webargs = "6.1.1"
# graphviz = {version = "0.14.2", optional = true}

[tool.poetry.dev-dependencies]
black = "19.10b0" # The uncompromising code formatter.
coverage = "5.3.1" 
ipdb = "0.13.4" # ipython debugger
isort = "5.7.0" 
mypy = "0.790" # Optional static typing for Python
pip-licenses = "3.2.0" # Generate licenses for all 3rd party packages
pipdeptree = "1.0.0" 
ptable = "0.9.2" 
pylint = "2.6.0" 
pytest = "6.2.1" # pytest: simple powerful testing with Python
pytest-cov = "2.10.1" # Pytest plugin for measuring coverage.
pytest-forked = "1.3.0" 
pytest-sugar = "0.9.4" # a plugin for pytest that changes the look and feel of pytest (e.g. progressbar, show tests that fail instantly).
pytest-xdist = "2.2.0" 
responses = "0.12.1" # A utility library for mocking out the `requests` Python library.
toml = "0.10.2" 

[tool.poetry.extras]
jupyter = ["ipykernel", "jupyterlab", "py-heat-magic"]
profiling = ["psutil", "line-profiler", "memory-profiler", "pyinstrument", "pandas-profiling", "snakeviz"]

[tool.black]
exclude = '(\.git|\.mypy_cache|\.venv)'
include = '\.pyi?$'
line-length = 120
target-version = ['py38']

[tool.isort]
profile = "black"

[tool.pylint.master]
extension-pkg-whitelist = ["pydantic"]
fail-under = "9"

[tool.pylint.format]
max-line-length = "120"

[tool.pylint.messages_control]
disable = "bad-whitespace, trailing-whitespace"

[tool.pylint.miscellaneous]
notes = "FIXME,XXX,TODO,TODO,fixme,todo,TODO:"

[tool.pytest.ini_options]
addopts = "--pdbcls=IPython.terminal.debugger:TerminalPdb --strict-markers --cov=src --cov-branch --cov-fail-under=100 tests"
markers = [
  "unit: marks tests as unit tests (deselect with '-m \"not integration\"')",
  "api: marks tests as api tests (deselect with '-m \"not unit\"')",
  "asyncio: marks tests as asynchronous",
]

[tool.coverage.report]
omit = [
  "**/__init__.py",
  ".mypy_cache",
  ".reports",
  ".git",
  "**/tests/*",
]
show_missing = true

[tool.coverage.run]
omit = ["*/__init__.py", ".mypy_cache", ".reports", ".git"]

[build-system]
build-backend = "poetry.masonry.api"
requires = ["poetry>=0.12"]
